aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),][order(comds$rating),]
aggregate(sum(comds$rating), by=list(Rest=comds$name), FUN=sum)[order(comds$rating),][order(comds$rating),]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
#restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
tapply(comds$rating, comds$name, FUN=sum)
head(ete)
#restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
ete <- tapply(comds$rating, comds$name, FUN=sum)
head(ete)
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
restByRating
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
restByRating[order(x),]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
restByRating[order(restByRating$x),]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
restByRating[order(restByRating$x),decreasing = TRUE]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
restByRating[order(restByRating$x,decreasing = TRUE),]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[3] <- "SumRating"
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating[order(restByRating$sumRating,decreasing = TRUE),]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating[order(restByRating$SumRating,decreasing = TRUE),]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating <- restByRating[order(restByRating$SumRating,decreasing = TRUE),]
head(restByRating, n=10)
levels( restByRating$Rest )
sum(restByRating$Rest )
dim(restByRating$Rest )
dim(restByRating )
comds$city[comds$city == 'slp',]
comds[comds$city == 'slp',]
comds[comds$city == '?',]
comds[comds$city == 'san luis potos',]
comds[comds$city == 'san luis potos',] <- "Jos SLP"
comds$city['san luis potos',] <- "Jos SLP"
comds$city['san luis potos'] <- "Jos SLP"
comds$city[comds$city == "san luis pots"] <- "J05 SLP"
comds$city[comds$city == "san luis pots"] <- "J05 SLP"
comds$city[comds$city == "san luis pots"]
comds$city[comds$city == "san luis potos"]
levels( comds$city )
levels( comds$city )
comds$city[comds$city == "s.l.p."]
comds$city
comds$city[comds$city == "victoria"]
comds$city[comds$city == "victoria"] <- "Chela culera"
#Cargamos el primer set de datos
rating <- read.delim("RCdata/rating_final.csv", sep = ",", stringsAsFactors = FALSE, header=TRUE)
str(rating)
head(rating)
comds$city[comds$city == "victoria"] <- "Chela culera"
comds <- combined_data
str(comds)
#Cargamos el primer set de datos
rating <- read.delim("RCdata/rating_final.csv", sep = ",", stringsAsFactors = FALSE, header=TRUE)
str(rating)
head(rating)
#Cargamos el primer set de datos
rating <- read.delim("RCdata/rating_final.csv", sep = ",", stringsAsFactors = FALSE, header=TRUE)
str(rating)
head(rating)
#Para este set de datos utilizaremos solo userID, placeID y rating, creando un subset
rating <- subset(rating, select= -c(4,5))
str(rating)
head(rating)
#Cargamos Geoplaces
geoplaces <- read.delim("RCdata/geoplaces2.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(geoplaces)
head(geoplaces)
#Para este set de datos utilizaremos solo placeID, name, city, latitude y longitude, creando un subset
geoplaces <- subset(geoplaces, select= c(1,5,7,2,3))
str(geoplaces)
head(geoplaces)
#Ahora Cargamos chefmozcuisine, unicamente contiene placeID y RCuisine, que son los datos que utilizaremos por lo que no eliminaremos ninguna columna
chfcn <- read.delim("RCdata/chefmozcuisine.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(chfcn)
head(chfcn)
#Combinaremos los data sets para generar solo un data set
combined_data <- merge(rating,geoplaces, by="placeID") # combinamos primero rating y geoplaces
str(combined_data)
head(combined_data)
#por ultimo del resultado obtenido lo combinamos con chefmozcuisine
combined_data <- merge(combined_data,chfcn, by="placeID")
str(combined_data)
head(combined_data)
combined_data[1:6,]
comds <- combined_data
str(comds)
sum(is.na(comds))
hist(comds$rating, col = 'skyblue3', breaks = 3)
levels( comds$city )
comds$city[comds$city == "victoria"] <- "Chela culera"
barplot(prop.table(table(comds$city)), col = 'skyblue3')
sum(comds$city=="?")
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating <- restByRating[order(restByRating$SumRating,decreasing = TRUE),]
head(restByRating, n=10)
dim(restByRating )
library(Matrix)
#Matriz de utilidad/Tabla de Contingencias:
UtMx <- with(combined_data,
tapply(rating, list(userID,placeID),
sum, default=NA) )
dim(UtMx)  # dimension de UtMx
#UtMx
UtMx[is.na(UtMx)] <- 0
nombres <-colnames(UtMx)
UtMx[1:6,1:6]
#aplicamos el SVD a la traspuesta:
library(irlba)
Msvd <- svd( t(UtMx) )  # estamos tomando la traspuesta para que las movies queden en los renglones:
str(Msvd)  # para ver la estructura de las tres matrices: U*D*V
# Observa que la matriz diagonal "d" esta dada solo como un vector unidimensional.
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
# Curso Sistemas Inteligentes.
####### Integrantes ##########
# Anna Karen Casillas Garcia
# Josue Emmanuel Gomez
# Luis Gonzalez
#Se requiere del enlace Descargar el archivo RCData.zip y utilizar los siguientes archivos: rating_final.csv, geoplaces2.csv, chefmozcuisine.csv https://archive.ics.uci.edu/ml/datasets/Restaurant+%26+consumer+data
#Cargamos el primer set de datos
rating <- read.delim("RCdata/rating_final.csv", sep = ",", stringsAsFactors = FALSE, header=TRUE)
str(rating)
head(rating)
#Para este set de datos utilizaremos solo userID, placeID y rating, creando un subset
rating <- subset(rating, select= -c(4,5))
str(rating)
head(rating)
#Cargamos Geoplaces
geoplaces <- read.delim("RCdata/geoplaces2.csv", sep = ",", stringsAsFactors = FALSE, header=TRUE)
str(geoplaces)
head(geoplaces)
#Para este set de datos utilizaremos solo placeID, name, city, latitude y longitude, creando un subset
geoplaces <- subset(geoplaces, select= c(1,5,7,2,3))
str(geoplaces)
head(geoplaces)
#Ahora Cargamos chefmozcuisine, unicamente contiene placeID y RCuisine, que son los datos que utilizaremos por lo que no eliminaremos ninguna columna
chfcn <- read.delim("RCdata/chefmozcuisine.csv", sep = ",", stringsAsFactors = FALSE, header=TRUE)
str(chfcn)
head(chfcn)
#Combinaremos los data sets para generar solo un data set
combined_data <- merge(rating,geoplaces, by="placeID") # combinamos primero rating y geoplaces
str(combined_data)
head(combined_data)
#por ultimo del resultado obtenido lo combinamos con chefmozcuisine
combined_data <- merge(combined_data,chfcn, by="placeID")
str(combined_data)
head(combined_data)
combined_data[1:6,]
comds <- combined_data
str(comds)
sum(is.na(comds))
hist(comds$rating, col = 'skyblue3', breaks = 3)
levels( comds$city )
comds$city[comds$city == "victoria"] <- "Chela culera"
barplot(prop.table(table(comds$city)), col = 'skyblue3')
sum(comds$city=="?")
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating <- restByRating[order(restByRating$SumRating,decreasing = TRUE),]
head(restByRating, n=10)
dim(restByRating )
library(Matrix)
#Matriz de utilidad/Tabla de Contingencias:
UtMx <- with(combined_data,
tapply(rating, list(userID,placeID),
sum, default=NA) )
dim(UtMx)  # dimension de UtMx
#UtMx
UtMx[is.na(UtMx)] <- 0
nombres <-colnames(UtMx)
UtMx[1:6,1:6]
#aplicamos el SVD a la traspuesta:
library(irlba)
Msvd <- svd( t(UtMx) )  # estamos tomando la traspuesta para que las movies queden en los renglones:
str(Msvd)  # para ver la estructura de las tres matrices: U*D*V
# Observa que la matriz diagonal "d" esta dada solo como un vector unidimensional.
levels( comds$city )
# Curso Sistemas Inteligentes.
####### Integrantes ##########
# Anna Karen Casillas Garcia
# Josue Emmanuel Gomez
# Luis Gonzalez
#Se requiere del enlace Descargar el archivo RCData.zip y utilizar los siguientes archivos: rating_final.csv, geoplaces2.csv, chefmozcuisine.csv https://archive.ics.uci.edu/ml/datasets/Restaurant+%26+consumer+data
#Cargamos el primer set de datos
rating <- read.delim("RCdata/rating_final.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(rating)
head(rating)
#Para este set de datos utilizaremos solo userID, placeID y rating, creando un subset
rating <- subset(rating, select= -c(4,5))
str(rating)
head(rating)
#Cargamos Geoplaces
geoplaces <- read.delim("RCdata/geoplaces2.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(geoplaces)
head(geoplaces)
#Para este set de datos utilizaremos solo placeID, name, city, latitude y longitude, creando un subset
geoplaces <- subset(geoplaces, select= c(1,5,7,2,3))
str(geoplaces)
head(geoplaces)
#Ahora Cargamos chefmozcuisine, unicamente contiene placeID y RCuisine, que son los datos que utilizaremos por lo que no eliminaremos ninguna columna
chfcn <- read.delim("RCdata/chefmozcuisine.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(chfcn)
head(chfcn)
#Combinaremos los data sets para generar solo un data set
combined_data <- merge(rating,geoplaces, by="placeID") # combinamos primero rating y geoplaces
str(combined_data)
head(combined_data)
#por ultimo del resultado obtenido lo combinamos con chefmozcuisine
combined_data <- merge(combined_data,chfcn, by="placeID")
str(combined_data)
head(combined_data)
combined_data[1:6,]
comds <- combined_data
str(comds)
sum(is.na(comds))
hist(comds$rating, col = 'skyblue3', breaks = 3)
levels( comds$city )
comds$city[comds$city == "victoria"] <- "Chela culera"
levels( comds$city )
barplot(prop.table(table(comds$city)), col = 'skyblue3')
sum(comds$city=="?")
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating <- restByRating[order(restByRating$SumRating,decreasing = TRUE),]
head(restByRating, n=10)
dim(restByRating )
library(Matrix)
#Matriz de utilidad/Tabla de Contingencias:
UtMx <- with(combined_data,
tapply(rating, list(userID,placeID),
sum, default=NA) )
dim(UtMx)  # dimension de UtMx
#UtMx
UtMx[is.na(UtMx)] <- 0
nombres <-colnames(UtMx)
UtMx[1:6,1:6]
#aplicamos el SVD a la traspuesta:
library(irlba)
Msvd <- svd( t(UtMx) )  # estamos tomando la traspuesta para que las movies queden en los renglones:
str(Msvd)  # para ver la estructura de las tres matrices: U*D*V
# Observa que la matriz diagonal "d" esta dada solo como un vector unidimensional.
Data <-comds.frame(city=c(“cd victorias”,”cd. victoria”)))
Data <-comds(city=c(“cd victorias”,”cd. victoria”)))
Data <-comds(city=c(“cd victorias”,”cd. victoria”))
Data <-comds(city=c("cd victorias","cd. victoria"))
Data <-comds.frame(city=c("cd victorias","cd. victoria"))
Data <-comds.frame(city=c("Cd Victoria","Cd. Victoria"))
#Data <-comds.frame(city=c("Cd Victoria","Cd. Victoria"))
comds$city[comds$city == "slp"]
#Data <-comds.frame(city=c("Cd Victoria","Cd. Victoria"))
comds$city["slp"]
#Data <-comds.frame(city=c("Cd Victoria","Cd. Victoria"))
comds$city[comds$city == "victoria"] <- "Ciudad Victoria"
levels( comds$city )
#Data <-comds.frame(city=c("Cd Victoria","Cd. Victoria"))
comds$city[comds$city == "Cd. Victoria"] <- "Ciudad Victoria"
levels( comds$city )
#Data <-comds.frame(city=c("Cd Victoria","Cd. Victoria"))
comds$city <- comds$city[comds$city == "Cd. Victoria"] <- "Ciudad Victoria"
levels( comds$city )
# Curso Sistemas Inteligentes.
####### Integrantes ##########
# Anna Karen Casillas Garcia
# Josue Emmanuel Gomez
# Luis Gonzalez
#Se requiere del enlace Descargar el archivo RCData.zip y utilizar los siguientes archivos: rating_final.csv, geoplaces2.csv, chefmozcuisine.csv https://archive.ics.uci.edu/ml/datasets/Restaurant+%26+consumer+data
#Cargamos el primer set de datos
rating <- read.delim("RCdata/rating_final.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(rating)
head(rating)
#Para este set de datos utilizaremos solo userID, placeID y rating, creando un subset
rating <- subset(rating, select= -c(4,5))
str(rating)
head(rating)
#Cargamos Geoplaces
geoplaces <- read.delim("RCdata/geoplaces2.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(geoplaces)
head(geoplaces)
#Para este set de datos utilizaremos solo placeID, name, city, latitude y longitude, creando un subset
geoplaces <- subset(geoplaces, select= c(1,5,7,2,3))
str(geoplaces)
head(geoplaces)
#Ahora Cargamos chefmozcuisine, unicamente contiene placeID y RCuisine, que son los datos que utilizaremos por lo que no eliminaremos ninguna columna
chfcn <- read.delim("RCdata/chefmozcuisine.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(chfcn)
head(chfcn)
#Combinaremos los data sets para generar solo un data set
combined_data <- merge(rating,geoplaces, by="placeID") # combinamos primero rating y geoplaces
str(combined_data)
head(combined_data)
#por ultimo del resultado obtenido lo combinamos con chefmozcuisine
combined_data <- merge(combined_data,chfcn, by="placeID")
str(combined_data)
head(combined_data)
combined_data[1:6,]
comds <- combined_data
str(comds)
sum(is.na(comds))
hist(comds$rating, col = 'skyblue3', breaks = 3)
levels( comds$city )
#Data <-comds.frame(city=c("Cd Victoria","Cd. Victoria"))
comds$city[comds$city == "Cd. Victoria"] <- "Ciudad Victoria"
levels( comds$city )
barplot(prop.table(table(comds$city)), col = 'skyblue3')
sum(comds$city=="?")
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating <- restByRating[order(restByRating$SumRating,decreasing = TRUE),]
head(restByRating, n=10)
dim(restByRating )
library(Matrix)
#Matriz de utilidad/Tabla de Contingencias:
UtMx <- with(combined_data,
tapply(rating, list(userID,placeID),
sum, default=NA) )
dim(UtMx)  # dimension de UtMx
#UtMx
UtMx[is.na(UtMx)] <- 0
nombres <-colnames(UtMx)
UtMx[1:6,1:6]
#aplicamos el SVD a la traspuesta:
library(irlba)
Msvd <- svd( t(UtMx) )  # estamos tomando la traspuesta para que las movies queden en los renglones:
str(Msvd)  # para ver la estructura de las tres matrices: U*D*V
# Observa que la matriz diagonal "d" esta dada solo como un vector unidimensional.
#install.packages("revgeo")
#install.packages("dplyr")
library(revgeo)
install.packages("revgeo")
install.packages("dplyr")
library(revgeo)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
#install.packages("revgeo")
#install.packages("dplyr")
library(revgeo)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
# Curso Sistemas Inteligentes.
####### Integrantes ##########
# A00354512 Anna Karen Casillas Garcia
# A00354512 Josue Emmanuel Gomez Carrillo
# A00540988 Luis Francico Gonzalez Rodriguez
#Se requiere del enlace Descargar el archivo RCData.zip y utilizar los siguientes archivos: rating_final.csv, geoplaces2.csv, chefmozcuisine.csv https://archive.ics.uci.edu/ml/datasets/Restaurant+%26+consumer+data
#Cargamos el primer set de datos
rating <- read.delim("RCdata/rating_final.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(rating)
head(rating)
#Para este set de datos utilizaremos solo userID, placeID y rating, creando un subset
rating <- subset(rating, select= -c(4,5))
str(rating)
head(rating)
#Cargamos Geoplaces
geoplaces <- read.delim("RCdata/geoplaces2.csv", sep = ",", stringsAsFactors = FALSE, header=TRUE)
str(geoplaces)
head(geoplaces)
#Para este set de datos utilizaremos solo placeID, name, city, latitude y longitude, creando un subset
geoplaces <- subset(geoplaces, select= c(1,5,7,2,3))
str(geoplaces)
head(geoplaces)
#Ahora Cargamos chefmozcuisine, unicamente contiene placeID y RCuisine, que son los datos que utilizaremos por lo que no eliminaremos ninguna columna
chfcn <- read.delim("RCdata/chefmozcuisine.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(chfcn)
head(chfcn)
#Combinaremos los data sets para generar solo un data set
combined_data <- merge(rating,geoplaces, by="placeID") # combinamos primero rating y geoplaces
str(combined_data)
head(combined_data)
#por ultimo del resultado obtenido lo combinamos con chefmozcuisine
combined_data <- merge(combined_data,chfcn, by="placeID")
str(combined_data)
head(combined_data)
combined_data[1:6,]
comds <- combined_data
str(comds)
hist(comds$placeID, col = 'skyblue3', breaks = 3)
sum(is.na(comds))
hist(comds$rating, col = 'skyblue3', breaks = 3)
boxplot(comds$rating, col = 'skyblue3')
barplot(prop.table(table(comds$userID)), col = 'skyblue3')
barplot(prop.table(table(comds$Rcuisine)), col = 'skyblue3')
sum(comds$city=="?")
#install.packages("revgeo")
#install.packages("dplyr")
library(revgeo)
library(dplyr)
latlong <-subset(comds,comds$city == "?",select=placeID:longitude,stringsAsFactors=FALSE)
latlong
cities <- revgeo(latlong$longitude, latlong$latitude,  output = 'hash', item='city')
cities
latlong$city <- cities$city
latlong
for(i in 1:nrow(latlong)) {
row <- latlong[i,]
comds$city[which(comds$placeID == row$placeID)] <- as.character(row$city)
}
comds
sum(comds$city=="?")
#sum(is.na(latlong))
sum(is.na(comds))
#Volver Categórica la columna city
comds$city = as.factor(comds$city)
levels( comds$city )
barplot(prop.table(table(comds$city)), col = 'skyblue3')
lev <- with(comds, levels(city))
lev[lev=="Cd Victoria"] <- "Ciudad Victoria"
lev[lev=="Cd Victoria "] <- "Ciudad Victoria"
lev[lev=="Cd. Victoria"] <- "Ciudad Victoria"
lev[lev=="victoria "] <- "Ciudad Victoria"
lev[lev=="victoria"] <- "Ciudad Victoria"
lev[lev=="cuernavaca "] <- "Cuernavaca"
lev[lev=="cuernavaca"] <- "Cuernavaca"
lev[lev=="san luis potos"] <- "San Luis Potosí"
lev[lev=="slp"] <- "San Luis Potosí"
lev[lev=="s.l.p"] <- "San Luis Potosí"
lev[lev=="san luis potosi"] <- "San Luis Potosí"
lev[lev=="san luis potosi "] <- "San Luis Potosí"
lev[lev=="s.l.p."] <- "San Luis Potosí"
lev[lev=="San Luis Potosi"] <- "San Luis Potosí"
comds <- within(comds, levels(city) <- lev)
levels(comds$city)
barplot(prop.table(table(comds$city)), col = 'skyblue3')
sum(comds$city=="?")
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating <- restByRating[order(restByRating$SumRating,decreasing = TRUE),]
restByRating
#head(restByRating)
dim(restByRating )
restByRating <- aggregate(comds$rating, by=list(Id=comds$placeID,Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[3] <- "SumRating"
restByRating <- restByRating[order(restByRating$SumRating,decreasing = TRUE),]
head(restByRating, n=10)
out <- subset(comds, placeID %in% c(135032, 135052,135085,132825,135041,135030,135026,135053,132834,135025))
agg <- aggregate(out$placeID, by=list(TiposCocina=out$Rcuisine), FUN=mean)[order(out$placeID),]
agg <- agg[ -c(2)]
agg <- na.omit(agg)
totalTipos <- unique(agg$TiposCocina)
length(totalTipos)
head(agg, 8)
library(Matrix)
#Matriz de utilidad/Tabla de Contingencias:
UtMx <- with(comds,
tapply(rating, list(userID,placeID),
sum, default=NA) )
dim(UtMx)  # dimension de UtMx 138 usuarios y 95 placesID
#UtMx
UtMx[is.na(UtMx)] <- 0 # como tiene muchas entradas NA las convetimos a 0s para matematicamente poder ser manipuladas
nombres <-colnames(UtMx) # guardamos el vector de nombres para facil acceso
UtMx[1:6,1:6]
#aplicamos el SVD a la traspuesta a la matriz de utlidad:
library(irlba)
Msvd <- svd( t(UtMx) )  # estamos tomando la traspuesta para que los placesIDs queden en los renglones y calculamos la SVD
str(Msvd)  # para ver la estructura de las tres matrices: U*D*V
# se Observa que la matriz diagonal "d" esta dada solo como un vector unidimensional.
#Recomendacion con Matriz de correlacion y SVD-TRUNCADO:
utrunc <- Msvd$u[,1:10]
corr_mx <- cor( t(utrunc), use="pairwise.complete.obs", method = "pearson")
#corr_mx
dim(corr_mx)
# Seleccionamos a "Gorditas Doña Gloria":
placeId <- "132834"
#str(nombres)
placeIndex <- match(c(placeId),nombres) # obtenemos el index de este placeID en nombres que guardamos previamente
str(placeIndex) #index obtenido
mis_recomendaciones <- corr_mx[,placeIndex] # obtenemos las recomentaciones con base a el place ID
#mis_recomendaciones
# Seleccionemos aquellas correlaciones altas:
tops <- which(mis_recomendaciones[]>0.42 & mis_recomendaciones[] < 1.0, arr.ind = TRUE)
#nombres[tops]
#mis_recomendaciones[tops]
top_recomendaciones <- cbind(mis_recomendaciones[tops], nombres[tops])
top_recomendaciones
result <- subset(comds, placeID %in% top_recomendaciones[,2])
recomend <- unique(result$name)
paste(c("Te recomendamos los 12 siguientes lugares cerca de tí:", recomend))
restByRating <- aggregate(comds$rating, by=list(Id=comds$placeID,Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[3] <- "SumRating"
restByRating <- restByRating[order(restByRating$SumRating,decreasing = TRUE),]
head(restByRating, n=10)
