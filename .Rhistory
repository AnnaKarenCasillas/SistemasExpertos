install.packages("irlba")
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/_Training/Maestrias y Doctorados/MCC ITESM/Semestre Ene-Jun 2019/Sistemas Inteligentes/Tarea6/SistemasExpertos")
#Cargamos el primer set de datos
rating <- read.delim("rating_final.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
library(readr)
rating_final <- read_csv("RCdata/rating_final.csv")
View(rating_final)
#Cargamos el primer set de datos
rating <- read.delim("rating_final.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
#Cargamos el primer set de datos
rating <- read.delim("RCdata/rating_final.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(rating)
head(rating)
#Para este set de datos utilizaremos solo userID, placeID y rating, creando un subset
rating <- subset(rating, select= -c(4,5))
str(rating)
head(rating)
#Cargamos Geoplaces
geoplaces <- read.delim("/Users/akcasill/Documents/Maestria/SistemasExpertos/RCdata/geoplaces2.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
#Cargamos Geoplaces
geoplaces <- read.delim("RCdata/geoplaces2.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(geoplaces)
head(geoplaces)
#Para este set de datos utilizaremos solo placeID, name, city, latitude y longitude, creando un subset
geoplaces <- subset(geoplaces, select= c(1,5,7,2,3))
str(geoplaces)
head(geoplaces)
#Ahora Cargamos chefmozcuisine, unicamente contiene placeID y RCuisine, que son los datos que utilizaremos por lo que no eliminaremos ninguna columna
chfcn <- read.delim("/Users/akcasill/Documents/Maestria/SistemasExpertos/RCdata/chefmozcuisine.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
#Ahora Cargamos chefmozcuisine, unicamente contiene placeID y RCuisine, que son los datos que utilizaremos por lo que no eliminaremos ninguna columna
chfcn <- read.delim("RCdata/chefmozcuisine.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(chfcn)
head(chfcn)
#Combinaremos los data sets para generar solo un data set
combined_data <- merge(rating,geoplaces, by="placeID") # combinamos primero rating y geoplaces
str(combined_data)
head(combined_data)
#por ultimo del resultado obtenido lo combinamos con chefmozcuisine
combined_data <- merge(combined_data,chfcn, by="placeID")
str(combined_data)
head(combined_data)
combined_data[1:6,]
#Matriz de utilidad/Tabla de Contingencias:
UtMx <- with(combined_data,
tapply(rating, list(userID,placeID),
sum, default=NA) )
dim(UtMx)  # dimension de UtMx
#UtMx
UtMx[is.na(UtMx)] <- 0
nombres <-colnames(UtMx)
UtMx[1:6,1:6]
#aplicamos el SVD a la traspuesta:
library(irlba)
Msvd <- svd( t(UtMx) )  # estamos tomando la traspuesta para que las movies queden en los renglones:
str(Msvd)  # para ver la estructura de las tres matrices: U*D*V
# Observa que la matriz diagonal "d" esta dada solo como un vector unidimensional.
library(Matrix)
#Matriz de utilidad/Tabla de Contingencias:
UtMx <- with(combined_data,
tapply(rating, list(userID,placeID),
sum, default=NA) )
dim(UtMx)  # dimension de UtMx
#UtMx
UtMx[is.na(UtMx)] <- 0
nombres <-colnames(UtMx)
UtMx[1:6,1:6]
#aplicamos el SVD a la traspuesta:
library(irlba)
Msvd <- svd( t(UtMx) )  # estamos tomando la traspuesta para que las movies queden en los renglones:
str(Msvd)  # para ver la estructura de las tres matrices: U*D*V
# Observa que la matriz diagonal "d" esta dada solo como un vector unidimensional.
library(Matrix)
#Matriz de utilidad/Tabla de Contingencias:
UtMx <- with(combined_data,
tapply(rating, list(userID,placeID),
sum, default=NA) )
dim(UtMx)  # dimension de UtMx
#UtMx
UtMx[is.na(UtMx)] <- 0
nombres <-colnames(UtMx)
UtMx[1:6,1:6]
#aplicamos el SVD a la traspuesta:
library(irlba)
Msvd <- svd( t(UtMx) )  # estamos tomando la traspuesta para que las movies queden en los renglones:
str(Msvd)  # para ver la estructura de las tres matrices: U*D*V
# Observa que la matriz diagonal "d" esta dada solo como un vector unidimensional.
comds <- combined_data
str(comds)
is.na(comds)
sum(is.na(comds))
hist(comds$rating)
hist(comds$rating, col = 'skyblue3', breaks = 3)
hist(comds$rating, col = 'skyblue3', breaks = 4)
hist(comds$rating, col = 'skyblue3', breaks = 3)
barplot(prop.table(table(comds$city)))
barplot(prop.table(table(comds$city)), col = 'skyblue3')
levels( comds$city )
comds$city["?"]
comds$city[=="?"]
comds[comds$city=="?"]]
comds$city=="?"
comds$city
sum(comds$city=="?")
levels( comds$city, comds$rating )
summary(comds)
summary(comds$name)
tapply(comds$name, comds$rating, summary)
tapply(comds$rating, comds$name , summary)
highest_individual_score <- comds$rating%>%
group_by(comds$name)%>%
top_n(10)
highest_individual_score <- comds$rating
group_by(comds$name)
aggregate(comds$rating, by=list(Category=comds$name), FUN=sum)
aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)
aggregate(Rating=comds$rating, by=list(Rest=comds$name), FUN=sum)
aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum))[order(x),]
aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(x),]
aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),][oreder(comds$rating),]
aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),][order(comds$rating),]
aggregate(sum(comds$rating), by=list(Rest=comds$name), FUN=sum)[order(comds$rating),][order(comds$rating),]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
#restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
tapply(comds$rating, comds$name, FUN=sum)
head(ete)
#restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
ete <- tapply(comds$rating, comds$name, FUN=sum)
head(ete)
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
restByRating
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
restByRating[order(x),]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
restByRating[order(restByRating$x),]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
restByRating[order(restByRating$x),decreasing = TRUE]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
restByRating[order(restByRating$x,decreasing = TRUE),]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[3] <- "SumRating"
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating[order(restByRating$sumRating,decreasing = TRUE),]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating[order(restByRating$SumRating,decreasing = TRUE),]
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating <- restByRating[order(restByRating$SumRating,decreasing = TRUE),]
head(restByRating, n=10)
levels( restByRating$Rest )
sum(restByRating$Rest )
dim(restByRating$Rest )
dim(restByRating )
comds$city[comds$city == 'slp',]
comds[comds$city == 'slp',]
comds[comds$city == '?',]
comds[comds$city == 'san luis potos',]
comds[comds$city == 'san luis potos',] <- "Jos SLP"
comds$city['san luis potos',] <- "Jos SLP"
comds$city['san luis potos'] <- "Jos SLP"
comds$city[comds$city == "san luis pots"] <- "J05 SLP"
comds$city[comds$city == "san luis pots"] <- "J05 SLP"
comds$city[comds$city == "san luis pots"]
comds$city[comds$city == "san luis potos"]
levels( comds$city )
levels( comds$city )
comds$city[comds$city == "s.l.p."]
comds$city
comds$city[comds$city == "victoria"]
comds$city[comds$city == "victoria"] <- "Chela culera"
#Cargamos el primer set de datos
rating <- read.delim("RCdata/rating_final.csv", sep = ",", stringsAsFactors = FALSE, header=TRUE)
str(rating)
head(rating)
comds$city[comds$city == "victoria"] <- "Chela culera"
comds <- combined_data
str(comds)
#Cargamos el primer set de datos
rating <- read.delim("RCdata/rating_final.csv", sep = ",", stringsAsFactors = FALSE, header=TRUE)
str(rating)
head(rating)
#Cargamos el primer set de datos
rating <- read.delim("RCdata/rating_final.csv", sep = ",", stringsAsFactors = FALSE, header=TRUE)
str(rating)
head(rating)
#Para este set de datos utilizaremos solo userID, placeID y rating, creando un subset
rating <- subset(rating, select= -c(4,5))
str(rating)
head(rating)
#Cargamos Geoplaces
geoplaces <- read.delim("RCdata/geoplaces2.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(geoplaces)
head(geoplaces)
#Para este set de datos utilizaremos solo placeID, name, city, latitude y longitude, creando un subset
geoplaces <- subset(geoplaces, select= c(1,5,7,2,3))
str(geoplaces)
head(geoplaces)
#Ahora Cargamos chefmozcuisine, unicamente contiene placeID y RCuisine, que son los datos que utilizaremos por lo que no eliminaremos ninguna columna
chfcn <- read.delim("RCdata/chefmozcuisine.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(chfcn)
head(chfcn)
#Combinaremos los data sets para generar solo un data set
combined_data <- merge(rating,geoplaces, by="placeID") # combinamos primero rating y geoplaces
str(combined_data)
head(combined_data)
#por ultimo del resultado obtenido lo combinamos con chefmozcuisine
combined_data <- merge(combined_data,chfcn, by="placeID")
str(combined_data)
head(combined_data)
combined_data[1:6,]
comds <- combined_data
str(comds)
sum(is.na(comds))
hist(comds$rating, col = 'skyblue3', breaks = 3)
levels( comds$city )
comds$city[comds$city == "victoria"] <- "Chela culera"
barplot(prop.table(table(comds$city)), col = 'skyblue3')
sum(comds$city=="?")
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating <- restByRating[order(restByRating$SumRating,decreasing = TRUE),]
head(restByRating, n=10)
dim(restByRating )
library(Matrix)
#Matriz de utilidad/Tabla de Contingencias:
UtMx <- with(combined_data,
tapply(rating, list(userID,placeID),
sum, default=NA) )
dim(UtMx)  # dimension de UtMx
#UtMx
UtMx[is.na(UtMx)] <- 0
nombres <-colnames(UtMx)
UtMx[1:6,1:6]
#aplicamos el SVD a la traspuesta:
library(irlba)
Msvd <- svd( t(UtMx) )  # estamos tomando la traspuesta para que las movies queden en los renglones:
str(Msvd)  # para ver la estructura de las tres matrices: U*D*V
# Observa que la matriz diagonal "d" esta dada solo como un vector unidimensional.
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
comds$city[comds$city == "victoria"] <- "Chela culera"
# Curso Sistemas Inteligentes.
####### Integrantes ##########
# Anna Karen Casillas Garcia
# Josue Emmanuel Gomez
# Luis Gonzalez
#Se requiere del enlace Descargar el archivo RCData.zip y utilizar los siguientes archivos: rating_final.csv, geoplaces2.csv, chefmozcuisine.csv https://archive.ics.uci.edu/ml/datasets/Restaurant+%26+consumer+data
#Cargamos el primer set de datos
rating <- read.delim("RCdata/rating_final.csv", sep = ",", stringsAsFactors = FALSE, header=TRUE)
str(rating)
head(rating)
#Para este set de datos utilizaremos solo userID, placeID y rating, creando un subset
rating <- subset(rating, select= -c(4,5))
str(rating)
head(rating)
#Cargamos Geoplaces
geoplaces <- read.delim("RCdata/geoplaces2.csv", sep = ",", stringsAsFactors = FALSE, header=TRUE)
str(geoplaces)
head(geoplaces)
#Para este set de datos utilizaremos solo placeID, name, city, latitude y longitude, creando un subset
geoplaces <- subset(geoplaces, select= c(1,5,7,2,3))
str(geoplaces)
head(geoplaces)
#Ahora Cargamos chefmozcuisine, unicamente contiene placeID y RCuisine, que son los datos que utilizaremos por lo que no eliminaremos ninguna columna
chfcn <- read.delim("RCdata/chefmozcuisine.csv", sep = ",", stringsAsFactors = FALSE, header=TRUE)
str(chfcn)
head(chfcn)
#Combinaremos los data sets para generar solo un data set
combined_data <- merge(rating,geoplaces, by="placeID") # combinamos primero rating y geoplaces
str(combined_data)
head(combined_data)
#por ultimo del resultado obtenido lo combinamos con chefmozcuisine
combined_data <- merge(combined_data,chfcn, by="placeID")
str(combined_data)
head(combined_data)
combined_data[1:6,]
comds <- combined_data
str(comds)
sum(is.na(comds))
hist(comds$rating, col = 'skyblue3', breaks = 3)
levels( comds$city )
comds$city[comds$city == "victoria"] <- "Chela culera"
barplot(prop.table(table(comds$city)), col = 'skyblue3')
sum(comds$city=="?")
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating <- restByRating[order(restByRating$SumRating,decreasing = TRUE),]
head(restByRating, n=10)
dim(restByRating )
library(Matrix)
#Matriz de utilidad/Tabla de Contingencias:
UtMx <- with(combined_data,
tapply(rating, list(userID,placeID),
sum, default=NA) )
dim(UtMx)  # dimension de UtMx
#UtMx
UtMx[is.na(UtMx)] <- 0
nombres <-colnames(UtMx)
UtMx[1:6,1:6]
#aplicamos el SVD a la traspuesta:
library(irlba)
Msvd <- svd( t(UtMx) )  # estamos tomando la traspuesta para que las movies queden en los renglones:
str(Msvd)  # para ver la estructura de las tres matrices: U*D*V
# Observa que la matriz diagonal "d" esta dada solo como un vector unidimensional.
levels( comds$city )
# Curso Sistemas Inteligentes.
####### Integrantes ##########
# Anna Karen Casillas Garcia
# Josue Emmanuel Gomez
# Luis Gonzalez
#Se requiere del enlace Descargar el archivo RCData.zip y utilizar los siguientes archivos: rating_final.csv, geoplaces2.csv, chefmozcuisine.csv https://archive.ics.uci.edu/ml/datasets/Restaurant+%26+consumer+data
#Cargamos el primer set de datos
rating <- read.delim("RCdata/rating_final.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(rating)
head(rating)
#Para este set de datos utilizaremos solo userID, placeID y rating, creando un subset
rating <- subset(rating, select= -c(4,5))
str(rating)
head(rating)
#Cargamos Geoplaces
geoplaces <- read.delim("RCdata/geoplaces2.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(geoplaces)
head(geoplaces)
#Para este set de datos utilizaremos solo placeID, name, city, latitude y longitude, creando un subset
geoplaces <- subset(geoplaces, select= c(1,5,7,2,3))
str(geoplaces)
head(geoplaces)
#Ahora Cargamos chefmozcuisine, unicamente contiene placeID y RCuisine, que son los datos que utilizaremos por lo que no eliminaremos ninguna columna
chfcn <- read.delim("RCdata/chefmozcuisine.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(chfcn)
head(chfcn)
#Combinaremos los data sets para generar solo un data set
combined_data <- merge(rating,geoplaces, by="placeID") # combinamos primero rating y geoplaces
str(combined_data)
head(combined_data)
#por ultimo del resultado obtenido lo combinamos con chefmozcuisine
combined_data <- merge(combined_data,chfcn, by="placeID")
str(combined_data)
head(combined_data)
combined_data[1:6,]
comds <- combined_data
str(comds)
sum(is.na(comds))
hist(comds$rating, col = 'skyblue3', breaks = 3)
levels( comds$city )
comds$city[comds$city == "victoria"] <- "Chela culera"
levels( comds$city )
barplot(prop.table(table(comds$city)), col = 'skyblue3')
sum(comds$city=="?")
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating <- restByRating[order(restByRating$SumRating,decreasing = TRUE),]
head(restByRating, n=10)
dim(restByRating )
library(Matrix)
#Matriz de utilidad/Tabla de Contingencias:
UtMx <- with(combined_data,
tapply(rating, list(userID,placeID),
sum, default=NA) )
dim(UtMx)  # dimension de UtMx
#UtMx
UtMx[is.na(UtMx)] <- 0
nombres <-colnames(UtMx)
UtMx[1:6,1:6]
#aplicamos el SVD a la traspuesta:
library(irlba)
Msvd <- svd( t(UtMx) )  # estamos tomando la traspuesta para que las movies queden en los renglones:
str(Msvd)  # para ver la estructura de las tres matrices: U*D*V
# Observa que la matriz diagonal "d" esta dada solo como un vector unidimensional.
Data <-comds.frame(city=c(“cd victorias”,”cd. victoria”)))
Data <-comds(city=c(“cd victorias”,”cd. victoria”)))
Data <-comds(city=c(“cd victorias”,”cd. victoria”))
Data <-comds(city=c("cd victorias","cd. victoria"))
Data <-comds.frame(city=c("cd victorias","cd. victoria"))
Data <-comds.frame(city=c("Cd Victoria","Cd. Victoria"))
#Data <-comds.frame(city=c("Cd Victoria","Cd. Victoria"))
comds$city[comds$city == "slp"]
#Data <-comds.frame(city=c("Cd Victoria","Cd. Victoria"))
comds$city["slp"]
#Data <-comds.frame(city=c("Cd Victoria","Cd. Victoria"))
comds$city[comds$city == "victoria"] <- "Ciudad Victoria"
levels( comds$city )
#Data <-comds.frame(city=c("Cd Victoria","Cd. Victoria"))
comds$city[comds$city == "Cd. Victoria"] <- "Ciudad Victoria"
levels( comds$city )
#Data <-comds.frame(city=c("Cd Victoria","Cd. Victoria"))
comds$city <- comds$city[comds$city == "Cd. Victoria"] <- "Ciudad Victoria"
levels( comds$city )
# Curso Sistemas Inteligentes.
####### Integrantes ##########
# Anna Karen Casillas Garcia
# Josue Emmanuel Gomez
# Luis Gonzalez
#Se requiere del enlace Descargar el archivo RCData.zip y utilizar los siguientes archivos: rating_final.csv, geoplaces2.csv, chefmozcuisine.csv https://archive.ics.uci.edu/ml/datasets/Restaurant+%26+consumer+data
#Cargamos el primer set de datos
rating <- read.delim("RCdata/rating_final.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(rating)
head(rating)
#Para este set de datos utilizaremos solo userID, placeID y rating, creando un subset
rating <- subset(rating, select= -c(4,5))
str(rating)
head(rating)
#Cargamos Geoplaces
geoplaces <- read.delim("RCdata/geoplaces2.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(geoplaces)
head(geoplaces)
#Para este set de datos utilizaremos solo placeID, name, city, latitude y longitude, creando un subset
geoplaces <- subset(geoplaces, select= c(1,5,7,2,3))
str(geoplaces)
head(geoplaces)
#Ahora Cargamos chefmozcuisine, unicamente contiene placeID y RCuisine, que son los datos que utilizaremos por lo que no eliminaremos ninguna columna
chfcn <- read.delim("RCdata/chefmozcuisine.csv", sep = ",", stringsAsFactors = TRUE, header=TRUE)
str(chfcn)
head(chfcn)
#Combinaremos los data sets para generar solo un data set
combined_data <- merge(rating,geoplaces, by="placeID") # combinamos primero rating y geoplaces
str(combined_data)
head(combined_data)
#por ultimo del resultado obtenido lo combinamos con chefmozcuisine
combined_data <- merge(combined_data,chfcn, by="placeID")
str(combined_data)
head(combined_data)
combined_data[1:6,]
comds <- combined_data
str(comds)
sum(is.na(comds))
hist(comds$rating, col = 'skyblue3', breaks = 3)
levels( comds$city )
#Data <-comds.frame(city=c("Cd Victoria","Cd. Victoria"))
comds$city[comds$city == "Cd. Victoria"] <- "Ciudad Victoria"
levels( comds$city )
barplot(prop.table(table(comds$city)), col = 'skyblue3')
sum(comds$city=="?")
restByRating <- aggregate(comds$rating, by=list(Rest=comds$name), FUN=sum)[order(comds$rating),]
names(restByRating)[2] <- "SumRating"
restByRating <- restByRating[order(restByRating$SumRating,decreasing = TRUE),]
head(restByRating, n=10)
dim(restByRating )
library(Matrix)
#Matriz de utilidad/Tabla de Contingencias:
UtMx <- with(combined_data,
tapply(rating, list(userID,placeID),
sum, default=NA) )
dim(UtMx)  # dimension de UtMx
#UtMx
UtMx[is.na(UtMx)] <- 0
nombres <-colnames(UtMx)
UtMx[1:6,1:6]
#aplicamos el SVD a la traspuesta:
library(irlba)
Msvd <- svd( t(UtMx) )  # estamos tomando la traspuesta para que las movies queden en los renglones:
str(Msvd)  # para ver la estructura de las tres matrices: U*D*V
# Observa que la matriz diagonal "d" esta dada solo como un vector unidimensional.
#install.packages("revgeo")
#install.packages("dplyr")
library(revgeo)
install.packages("revgeo")
install.packages("dplyr")
library(revgeo)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
#install.packages("revgeo")
#install.packages("dplyr")
library(revgeo)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
